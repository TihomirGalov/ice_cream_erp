"""
Django settings for ice_cream_erp project.

Generated by 'django-admin startproject' using Django 4.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from django.utils.translation import gettext_lazy as _
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'django-insecure-1&m@8#yrn&)5ktt1)z$xf)x$%lw50@ejtkof3ej+#4ac^3^90%')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Set hosts to allow any app on Railway and the local testing URL
ALLOWED_HOSTS = ['localhost', '127.0.0.1']

# Set CSRF trusted origins to allow any app on Railway and the local testing URL
CSRF_TRUSTED_ORIGINS = ['https://localhost']

# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'rest_framework',
    'constance',
    'constance.backends.database',
    'rangefilter',
    'import_export',

    'ice_cream_types',
    'stores',
    'reports',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


ROOT_URLCONF = 'ice_cream_erp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ice_cream_erp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': "ice_cream_erp",
        'USER': os.environ.get('DB_USER', "postgres"),
        "PASSWORD": os.environ.get('DB_PASSWORD', "postgres"),
        "HOST": os.environ.get('DB_HOST', "db"),
        "PORT": os.environ.get('DB_PORT', "5432"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGES = [
    ('en', _('English')),
]

LANGUAGE_CODE = 'en'

TIME_ZONE = "Europe/Sofia"

DATE_INPUT_FORMATS = ["%d/%m/%Y"]

DATE_FORMAT = "d/m/Y"

DATETIME_FORMAT = "d/m/Y"

USE_I18N = True

USE_L10N = True

USE_TZ = True



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

import os
STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]
STATIC_ROOT = os.path.join(BASE_DIR, "assets")

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

LOCALE_PATHS = (
    os.path.join(BASE_DIR, "conf/locale/"),
    os.path.join(os.path.dirname(BASE_DIR), "conf/locale/"),
)

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CONSTANCE_BACKEND = "constance.backends.database.DatabaseBackend"
CONSTANCE_CONFIG = {
    'ICE_CREAM_PRICE': (1.99, _("Ice Cream Price")),
}


# # Django Jazzmin Settings
JAZZMIN_SETTINGS = {
    # Basic Branding
    "site_title": "Ice Cream ERP",
    "site_header": "Ice Cream ERP Admin",
    "site_brand": "Ice Cream ERP",
    "welcome_sign": "Welcome to Ice Cream ERP Admin",
    "language_chooser": True,
    "theme": "flatly",  # or 'cosmo', 'darkly', 'litera', etc.
    "use_form_for_filters": True,
    # Top menu (navbar) links
    "topmenu_links": [
        {"name": "Dashboard", "url": "admin:index", "icon": "fas fa-home"},
    ],

    # User menu (top-right) links
    "usermenu_links": [
        {"model": "auth.user"},
        {"name": "Logout", "url": "admin:logout", "icon": "fas fa-sign-out-alt"},
    ],

    # Icons for apps/models (Font Awesome)
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "auth.group": "fas fa-users",
        "stores.store": "fas fa-store",
        "ice_cream_types.icecreamtype": "fas fa-ice-cream",
        "reports": "fas fa-file-alt",
        "charts": "fas fa-chart-bar",
        "config": "fas fa-cogs",
    },

    # Whether to show the theme toggler in the sidebar
    "use_theme_toggler": True,

    # Hide the UI builder link from the sidebar (optional)
    "show_ui_builder": False,

    "custom_links": {
        "reports": [
            {
                "name": "Add Report",
                "url": "/reports/select_store/",
                "icon": "fas fa-plus",
            },
            {
            "name": "Charts",
            "url": "/reports/charts/",
            "icon": "fa fa-chart-bar",
        },
        ],
    },


}

# Redirect after login
LOGIN_REDIRECT_URL = "/"




# Update database configuration from $DATABASE_URL.
import dj_database_url
db_from_env = dj_database_url.config(conn_max_age=500)
DATABASES['default'].update(db_from_env)

